<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/tx
		   http://www.springframework.org/schema/tx/spring-tx.xsd
		   http://www.springframework.org/schema/aop
		   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 引入jdbc连接属性文件 -->
	<context:property-placeholder location="classpath:config/jdbc.properties" />

	<!--////////////////////////////////////alibaba连接池信息//////////////////////////////////////////////////////////-->
	<bean id="VMS_DB330000" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		  destroy-method="close">
		<property name="url" value="${jdbc.ds.vms.url330000}"/>
		<property name="username" value="${jdbc.ds.vms.user330000}"/>
		<property name="password" value="${jdbc.ds.vms.password330000}"/>
		<property name="maxActive" value="${jdbc.maxConnectionCount}"/>
		<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}"/>
		<property name="maxPoolPreparedStatementPerConnectionSize"
				  value="${jdbc.maxPoolPreparedStatementPerConnectionSize}"/>
		<property name="connectionProperties" value="config.decrypt=${jdbc.password.decrypt};config.decrypt.key=${jdbc.ds.vms.password.publickey330000}"/>
		<!--合并多个DruidDataSource的监控数据-->
		<property name="useGlobalDataSourceStat" value="true"/>

	</bean>
	<!--////////////////////////////////////alibaba连接池信息//////////////////////////////////////////////////////////-->

	<!--////////////////////////////////////mybatis连接信息//////////////////////////////////////////////////////////-->
	<bean id="dataSource330000"
		  class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<property name="targetDataSource" ref="VMS_DB330000" />
	</bean>

	<bean id="sqlSessionFactory330000" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource330000" />
		<property name="typeAliasesPackage" value="com.beisun.vmscloud.entity" />
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory330000"/>
		<property name="basePackage" value="com.beisun.vmscloud.dao.m330000" />
	</bean>

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager330000"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource330000" />
		<qualifier value="tx330000" />
	</bean>
	<!-- 全注解方式   需加上@Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager330000" />
	<!--////////////////////////////////////mybatis连接信息//////////////////////////////////////////////////////////-->
</beans>